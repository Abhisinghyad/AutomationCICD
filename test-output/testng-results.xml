<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-04T22:17:00 IST" name="Suite" finished-at="2024-10-04T22:18:31 IST" duration-ms="91147">
    <groups>
      <group name="ErrorHandling">
        <method signature="errorValidation.LoginError()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" name="LoginError" class="aurtomation.Testcase.errorValidation"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="submitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" name="submitOrder" class="aurtomation.Testcase.submitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-10-04T22:17:00 IST" name="SubmitOrder" finished-at="2024-10-04T22:17:34 IST" duration-ms="33470">
      <class name="aurtomation.Testcase.submitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:01 IST" name="launchApplication" finished-at="2024-10-04T22:17:13 IST" duration-ms="12228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:13 IST" name="submitOrder" data-provider="getdata" finished-at="2024-10-04T22:17:16 IST" duration-ms="2849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, email=anshika@gmail.com, productName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:16 IST" name="tearDown" finished-at="2024-10-04T22:17:16 IST" duration-ms="202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:16 IST" name="launchApplication" finished-at="2024-10-04T22:17:22 IST" duration-ms="5330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:22 IST" name="submitOrder" data-provider="getdata" finished-at="2024-10-04T22:17:25 IST" duration-ms="3510" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Qwerty@123, email=qwerty1998@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:25 IST" name="tearDown" finished-at="2024-10-04T22:17:26 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:26 IST" name="launchApplication" finished-at="2024-10-04T22:17:32 IST" duration-ms="6771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="OrderHistoryTest()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:32 IST" name="OrderHistoryTest" finished-at="2024-10-04T22:17:33 IST" depends-on-methods="aurtomation.Testcase.submitOrderTest.submitOrder" duration-ms="1146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:aurtomation.Testcase.submitOrderTest@638ef7ed]" started-at="2024-10-04T22:17:34 IST" name="tearDown" finished-at="2024-10-04T22:17:34 IST" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- aurtomation.Testcase.submitOrderTest -->
    </test> <!-- SubmitOrder -->
    <test started-at="2024-10-04T22:17:34 IST" name="ErrorValidation" finished-at="2024-10-04T22:18:31 IST" duration-ms="57022">
      <class name="aurtomation.Testcase.errorValidation">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:17:34 IST" name="launchApplication" finished-at="2024-10-04T22:18:09 IST" duration-ms="34248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="LoginError()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:09 IST" name="LoginError" finished-at="2024-10-04T22:18:09 IST" duration-ms="620" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incrrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incrrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at aurtomation.Testcase.errorValidation.LoginError(errorValidation.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginError -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:09 IST" name="tearDown" finished-at="2024-10-04T22:18:10 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:10 IST" name="launchApplication" finished-at="2024-10-04T22:18:18 IST" duration-ms="8814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="LoginError()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:18 IST" name="LoginError" finished-at="2024-10-04T22:18:19 IST" duration-ms="629" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incrrect email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incrrect email or password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at aurtomation.Testcase.errorValidation.LoginError(errorValidation.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginError -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:19 IST" name="tearDown" finished-at="2024-10-04T22:18:20 IST" duration-ms="149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:20 IST" name="launchApplication" finished-at="2024-10-04T22:18:29 IST" duration-ms="9280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:29 IST" name="productErrorValidation" finished-at="2024-10-04T22:18:31 IST" duration-ms="2408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:aurtomation.Testcase.errorValidation@e3c0e40]" started-at="2024-10-04T22:18:31 IST" name="tearDown" finished-at="2024-10-04T22:18:31 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- aurtomation.Testcase.errorValidation -->
    </test> <!-- ErrorValidation -->
  </suite> <!-- Suite -->
</testng-results>
